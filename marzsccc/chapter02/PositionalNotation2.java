package chapter02;/*
 * @Description  : learning coding
 * @Version      : 1.0
 * @Author       : marzsccc
 * @Date         : 2022-04-02 19:50:42
 * @LastEditors  : Do not edit
 * @LastEditTime : 2022-04-06 15:44:30
 * @FilePath     : \\JavaCode\\chapter02\\chapter02.PositionalNotation2.java
 * Copyright (C) 2022 marzsccc. All rights reserved.
 */

public class PositionalNotation2 {
    public static void main(String[] args) {
        // 推导过程
        // 1. 2的原码 => 00000000 00000000 00000000 00000010
        // 2. 2的补码 => 00000000 00000000 00000000 00000010
        // 3. 3的原码 => 00000000 00000000 00000000 00000011
        // 4. 3的补码 => 00000000 00000000 00000000 00000011
        // 5. 按位&
        // 00000000 00000000 00000000 00000010
        // 00000000 00000000 00000000 00000011
        // 00000000 00000000 00000000 00000010
        // 运算后的原码是 00000000 00000000 00000000 00000010
        // 运算的结果是 2

        System.out.println(2 & 3);
        // 推导过程
        // 1. -2的原码 => 10000000 00000000 00000000 00000010
        // 2. -2的反码 => 11111111 11111111 11111111 11111101
        // 3. -2的补码 => 11111111 11111111 11111111 11111110
        // 4. ~-2操作的补码=> 00000000 00000000 00000000 00000001
        // 5. 运算后的原码 => 00000000 00000000 00000000 00000001
        // 运算的结果是 1
        System.out.println(~-2);
        // 推导过程
        // 1. 2的原码 => 00000000 00000000 00000000 00000010
        // 2. 2的补码 => 00000000 00000000 00000000 00000010
        // 3. ~2操作的补码=> 11111111 11111111 11111111 11111101 (负数)
        // 4. 负数的反码 = 负数的补码-1 => 11111111 11111111 11111111 11111100
        // 5. 负数的原码 = 负数的反码的补码 => 10000000 00000000 00000000 00000011
        // 运算的结果是 -3
        System.out.println(~2);
    }

}
